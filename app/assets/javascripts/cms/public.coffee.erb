//= require jquery
//= require jquery_ujs
//= require jquery.cookie
#//= #require jquery.turbolinks
#//= #require turbolinks

$ ->
  SS_Kana.render()
  SS_Font.render()
  SS_AdobeReader.render()
  SS_Mobile.render()
  $(".ss-part").each ->
    SS.renderPart $(this)
  SS_Voice.render()

class @SS
  @head = ""
  @page = ""
  @href = ""
  @siteName = null
  @pageName = null
  @loading  = '<img style="vertical-align:middle" src="/assets/img/loading.gif" alt="loading.." border="0" widtth="16" height="11" />'

  @load: ->
    #deprecated

  @renderLayout: (url) ->
    head = $("head")
    body = $("body")

    SS.head = head.html()
    SS.page = $("#page").html()

    body.html ""

    $.ajax {
      type: "GET", url: SS_Kana.url(url), dataType: "json", cache: true, async: false
      success: (data) ->
        #body.hide()
        body.append data.body.replace("</ yield />", SS.page)

        $("#ss-site-name").html SS.siteName
        $("#ss-page-name").html SS.pageName

        if data.href != SS.href
          cache = $.ajaxSettings.cache
          $.ajaxSettings.cache = true

          if SS.href
            head.children("link").remove()
            head.children("script").remove()
          head.append data.head #.replace(/\$now/g, $.now())
          $.ajaxSettings.cache = cache

        SS.href = data.href
        SS.renderTools()
        #body.fadeIn(200)
      error: (req, status, error) ->
        body.html SS.page
      complete: ->
        $(".ss-part").each ->
          SS.renderPart $(this)
    }

  @renderPart: (elem) ->
    url = elem.data("href") || elem.attr("href")
    url = SS_Kana.url url.replace(/\.html/, ".json")

    elem.append " " + SS.loading
    $.ajax
      type: "GET", url: url, dataType: "json" #, cache: false
      data: "ref=" + SS_Kana.url(location.pathname, false)
      success: (data) ->
        $(elem).replaceWith data
      error: ->
        console.log "err"
        $(elem).find("img").remove()

class @SS_Kana
  @dir = "<%= SS.config.kana.location %>"

  @render: ->
    #bind = 'onclick="return SS_Kana.loadPage($(this))"'
    if $("body").data("kana")
      url = SS_Kana.url(location.pathname, false)
      bind = 'onclick="location.href=\'' + url + '\'; return false"'
      $("#ss-kana").html '<a class="off" href="#' + url + '" ' + bind + '>ふりがなをはずす</a>'
    else
      url = SS_Kana.url(location.pathname, true)
      bind = 'onclick="location.href=\'' + url + '\'; return false"'
      $("#ss-kana").html '<a class="on" href="#' + url + '" ' + bind + '>ふりがなをつける</a>'

  @url: (url, bool = null) ->
    bool = $("body").data("kana") if bool == null
    if bool
      url = @dir + url
    else
      url = url.replace(new RegExp("^" + @dir.replace("/", "\/") + "\/"), "/")
    return url

  @loadPage: (elem) ->
    $.ajax
      type: "GET", url: elem.attr("href"), dataType: "html" #, cache: false
      success: (data) ->
        body = $("body")
        body.data("kana", elem.hasClass("on"))
        body.html data.replace(/[\s\S]*<body.*?>([\s\S]*)<\/body>[\s\S]*/, "$1")
    return false

class @SS_Font
  @size = null # %

  @render: ->
    @size = parseInt($.cookie("ss-font")) || 100
    @set(@size) if @size != 100

    vr = $("#ss-medium")
    vr.html '<a href="#" onclick="return SS_Font.set(100)">' + vr.text() + '</a>'
    vr = $("#ss-small")
    vr.html '<a href="#" onclick="return SS_Font.set(false)">' + vr.text() + '</a>'
    vr = $("#ss-large")
    vr.html '<a href="#" onclick="return SS_Font.set(true)">' + vr.text() + '</a>'

  @set: (size) ->
    if size ==  true
      size = @size + 20
      return false if size > 200
    else if size == false
      size = @size - 20
      return false if size < 60

    @size = size
    $("body").css "font-size", size + "%"
    $.cookie("ss-font", size, { expires: 7, path: '/' })
    return false

class @SS_AdobeReader
  @render: ->
    if $("a[href$='.pdf']").length
      $("#ss-adobe-reader, .ss-adobe-reader").each ->
        $(this).html('<%= I18n.t('cms.adobe_reader.remark').join %>').show()

class @SS_Mobile
  @render: ->
    if navigator.userAgent.match(/(Android|iPad|iPhone)/)
      if $.cookie("ss-mobile") == "pc"
        head = $("head")
        head.children("meta[name=viewport]").remove()
        head.append '<meta name="viewport" content="width=1024" />'
        vr = $("#ss-mb")
        vr.html('<a href="#" onclick="return SS_Mobile.unset()">' + vr.text() + '</a>').show()
      else
        vr = $("#ss-pc")
        vr.html('<a href="#" onclick="return SS_Mobile.setPc()">' + vr.text() + '</a>').show()

  @unset: ->
    $.removeCookie("ss-mobile", { expires: 7, path: '/' })
    location.reload()
    return false

  @setPc: ->
    $.cookie("ss-mobile", "pc", { expires: 7, path: '/' })
    location.reload()
    return false

class @SS_Tabs
  @render: (elem) ->
    box  = $(elem)
    tabs = ""

    box.find(".tab").each (i) ->
      tab  = $(this)
      name = tab.find('header > h1').html()
      nav  = tab.find('nav')
      url  = nav.find(".more").attr("href")

      base_id = tab.attr("id")
      name_id = base_id + "-name"
      view_id = base_id + "-view"

      cls   = "name"
      cls   = "name current" if i == 0
      bind  = 'return SS_Tabs.select("' + elem + '", "#' + name_id + '", "#' + view_id + '")'
      tabs += "<a id='" + name_id + "' onclick='" + bind + "' class='" + cls + "' href='" + url + "'>" + name + "</a>"

      disp = ""
      disp = "style='display: none;'" if i != 0

      html  = "<article id='" + view_id + "' class='view' " + disp + ">"
      html += "<h1 style='display: none'>" + name + "</h1>"
      html += "<div class='pages'>" + tab.find(".pages").html() + "</div>"
      html += "<nav>" + tab.find('nav').html() + "</nav>"
      html += "</article>"

      box.append html
      tab.remove()

    box.prepend "<nav class='names'>" + tabs + "</nav>"

  @select: (box, name, view) ->
    $(box).find(".name").each ->
      $(this).removeClass "current"
    $(box).find(".view").each ->
      $(this).hide()
    $(name).addClass "current"
    $(view).show()
    return false

class @SS_Voice
  @voice_config =
    'location': "<%= SS.config.voice.controller['location'] %>"
    'loading-resource': "<%= SS.config.voice.resource['loading'] %>"
    'disabled-resource': "<%= SS.config.voice.resource['disabled'] %>"
    'overload-resource': "<%= SS.config.voice.resource['overload'] %>"
  @url = null
  @voice_tag = null
  @voice_controller = null
  @state = null
  @cancel_loading = null
  @timer_id = null

  @render: ->
    SS_Voice.url = SS_Voice.requestUrl()

    voice_tag = $('#ss-voice')
    return if voice_tag.size() == 0
    voice_tag = voice_tag.first() if voice_tag.size() > 1

    anchor = $('<a rel="nofollow"/>').attr('href', SS_Voice.url).html(voice_tag.html())
    voice_tag.html('')
    anchor.appendTo(voice_tag)
    SS_Voice.voice_tag = anchor

    id = '#ss-voice-controller'
    controller_parent = $(id)
    if controller_parent.size() == 0
      # no controller tag found, create default audio controller tag
      controller_parent = voice_tag

    SS_Voice.voice_controller = new SS_VoiceController(controller_parent)
    SS_Voice.state = null
    SS_Voice.cancel_loading = false
    SS_Voice.timer_id = null
    SS_Voice.init()

  @init: ->
    SS_Voice.state = 'init'
    SS_Voice.voice_controller.stop()
    SS_Voice.setAction(SS_Voice.load)
    SS_Voice.cancel_loading = false
    return false

  @setAction: (action) ->
    SS_Voice.voice_tag.unbind('click')
    SS_Voice.voice_tag.bind('click', action)

  @load: ->
    return false if SS_Voice.cancel_loading
    $.ajax {
      type: 'HEAD', url: SS_Voice.url, cache: false
      statusCode: {
        200: =>
          SS_Voice.playAudio()
        202: (data, status, xhr) =>
          SS_Voice.renderLoading()
          retry_after = xhr.getResponseHeader('Retry-After')
          retry_after = 5 unless retry_after
          SS_Voice.timer_id = setTimeout(SS_Voice.load, retry_after * 1000)
      }
      error: (xhr, status, error) ->
        SS_Voice.renderError(xhr.status)
    }
    return false

  @renderLoading: ->
    return false if SS_Voice.state == 'loading'
    url = SS_Voice.voice_config['loading-resource']
    SS_Voice.state = 'loading'
    SS_Voice.setAction(SS_Voice.cancel)
    SS_Voice.voice_controller.play(url)
    return false

  @renderError: (status) ->
    return false if SS_Voice.state == 'error'
    clearTimeout(SS_Voice.timer_id) if SS_Voice.timer_id >= 0
    SS_Voice.timer_id = -1
    if status == 429
      # too many requests
      url = SS_Voice.voice_config['overload-resource']
    else
      # other error
      url = SS_Voice.voice_config['disabled-resource']
    SS_Voice.state = 'error'
    SS_Voice.setAction(SS_Voice.cancel)
    SS_Voice.voice_controller.play(url)
    return false

  @cancel: ->
    SS_Voice.cancel_loading = true
    clearTimeout(SS_Voice.timer_id) unless SS_Voice.timer_id == null
    SS_Voice.timer_id = null
    # back to beginning
    SS_Voice.init()
    return false

  @playAudio: ->
    SS_Voice.state = 'playing'
    SS_Voice.voice_controller.play(SS_Voice.url)
    SS_Voice.setAction(SS_Voice.cancel)
    return false

  @requestUrl: ->
    path = SS_Voice.trimKanaDir(location.pathname)
    path = "/index.html" if path == "/"
    url = encodeURIComponent(SS_Voice.normalizeProtocol(location.protocol) + '://' + location.host + path)
    url = SS_Voice.normalizeLocation(SS_Voice.voice_config['location']) + '/' + url
    return url

  @trimKanaDir: (path, kana_dir = SS_Kana.dir) ->
    return path.replace(new RegExp('^' + kana_dir.replace('/', '\/') + '\/'), '/')

  @normalizeProtocol: (protocol) ->
    return protocol.replace(new RegExp(':$'), '')

  @normalizeLocation: (location) ->
    return location.replace(new RegExp('/$'), '')

class @SS_VoiceController
  constructor: (tag) ->
    @tag = $(tag)

  play: (source) ->
    @stop()
    @source = source
    audio_container = SS_VoiceController.createAudio(source)
    audio_container.appendTo(@tag)
    audio = audio_container.children('.ss-voice-player')
    audio[0].load()
    audio[0].play()

  stop: ->
    @source = null
    @tag.children('.ss-voice-container').remove()

  @createAudio: (source) ->
    audio_container = $('<span/>')
    audio_container.addClass('ss-voice-container')
    audio = $('<audio/>')
    audio.attr('controls', '')
    audio.attr('autoplay', '')
    audio.attr('loop', '')
    audio.attr('src', source)
    audio.addClass('ss-voice-player')
    audio.appendTo(audio_container)
    audio_container
