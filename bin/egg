#!/usr/bin/env ruby

# Command:
#   egg install mod-name -v 1.0
#   egg uninstall mod-name
#   egg pack mod-name -v 1.0

require "fileutils"
require 'zipruby'

class Frypan

  TARGETS = [
    "app/assets/images",
    "app/assets/javascripts",
    "app/assets/stylesheets",
    "app/cells",
    "app/controllers",
    "app/controllers/concerns",
    "app/helpers",
    "app/mailers",
    "app/models",
    "app/models/concerns",
    "app/views",
    "app/views/layouts",
    "config/initializers",
    "config/locales",
    "config/routes",
    "config/defaults",
    "db",
    "db/seeds",
    "doc",
    "lib",
    "lib/tasks/",
    "spec/controllers/",
    "spec/factories/",
    "spec/models/",
    "spec/support/",
  ]

  private
    def root
      "#{File.dirname(__dir__)}"
    end

    def zip_dir
      "#{root}/vendor/eggs"
    end

    def zip_file
      v = ver ? "-#{ver}" : nil
      "#{zip_dir}/#{ARGV[1]}#{v}.zip"
    end

    def name
      ARGV[1]
    end

    def mod
      name.gsub("-", "_")
    end

    def ver
      ARGV.each_with_index {|arg, i| return ARGV[i+1] if arg == "-v" && ARGV[i+1] }
      nil
    end

  public
    def install
      puts "Installing #{mod} (#{ver})"
      puts ""

      Dir.chdir(root)
      TARGETS.each do |dir|
        return puts "    Module exists: #{dir}/#{mod}" if File.exists?("#{dir}/#{mod}")
      end

      Zip::Archive.open(zip_file) do |ar|
        entry_names = ar.map do |f|
          path = f.name.sub(/^#{name}\//, '')
          if f.directory?
            puts "    create  #{path}"
            FileUtils.mkdir_p(path) if !File.exists?(path)
          else
            puts "    create  #{path}"
            File.binwrite(path, f.read)
          end
        end
      end
    end

    def uninstall
      puts "Uninstalling #{mod}"
      puts ""

      Dir.chdir(root)
      TARGETS.each do |dir|
        Dir.glob("#{dir}/#{mod}{/,/**/*,.*}").each do |f|
          puts "    delete  #{f.sub(/\/$/, '')}"
          FileUtils.rm_r(f) if File.exists?(f)
        end
      end
    end

    def pack
      puts "Packing #{mod} (#{ver})"
      puts ""

      Dir.chdir(root)
      Zip::Archive.open("#{zip_file}.tmp", Zip::CREATE) do |ar|
        TARGETS.each do |dir|
          ar.add_dir "#{name}/#{dir}/#{mod}" if File.exists? "#{dir}/#{mod}"
          Dir.glob("#{dir}/#{mod}{/**/*,.*}") do |f|
            if File.directory?(f)
              puts "     fetch  #{f}"
              ar.add_dir "#{name}/#{f}"
              next
            end
            puts "     fetch  #{f}"
            ar.add_file "#{name}/#{f}", f
          end
        end
      end

      return puts "    No such module: #{mod}" if !File.exists?("#{zip_file}.tmp")

      puts "\n    create  #{zip_file}"
      FileUtils.mv "#{zip_file}.tmp", zip_file
    end
end

Frypan.new.send ARGV[0]
puts ""
