SHIRASAGI インストールマニュアル
================================

CentOS 6.6/64bit

--------------------
# Packages

  su -
  yum -y install ImageMagick ImageMagick-devel

--------------------
# MongoDB

  vi /etc/yum.repos.d/CentOS-Base.repo
    --
    [10gen]
    name=10gen Repository
    baseurl=http://downloads-distro.mongodb.org/repo/redhat/os/x86_64/
    gpgcheck=0
    enabled=0
    --
  yum -y --enablerepo=10gen install mongo-10gen mongo-10gen-server
  /sbin/service mongod start
  /sbin/chkconfig mongod on

--------------------
# Ruby (RVM)

  gpg2 --keyserver hkp://keys.gnupg.net --recv-keys D39DC0E3
  \curl -sSL https://get.rvm.io | sudo bash -s stable
  source /etc/profile
  rvm install 2.2.1

--------------------
# SHIRASAGI

  git clone -b stable --depth 1 https://github.com/shirasagi/shirasagi /var/www/shirasagi
  cd /var/www/shirasagi
  cp -n config/samples/* config/
  bundle install
  rake unicorn:start

  Access to http://localhost:3000/.mypage

--------------------
# ふりがな機能

  cd /usr/local/src
  wget http://mecab.googlecode.com/files/mecab-0.996.tar.gz \
      http://mecab.googlecode.com/files/mecab-ipadic-2.7.0-20070801.tar.gz \
      http://mecab.googlecode.com/files/mecab-ruby-0.996.tar.gz \
      https://raw.githubusercontent.com/shirasagi/shirasagi/stable/vendor/mecab/mecab-ipadic-2.7.0-20070801.patch

  cd /usr/local/src
  tar xvzf mecab-0.996.tar.gz && cd mecab-0.996
  ./configure --enable-utf8-only && make && make install

  cd /usr/local/src
  tar xvzf mecab-ipadic-2.7.0-20070801.tar.gz && cd mecab-ipadic-2.7.0-20070801
  patch -p1 < ../mecab-ipadic-2.7.0-20070801.patch
  # もしくは:
  # patch -p1 < /var/www/shirasagi/vendor/mecab/mecab-ipadic-2.7.0-20070801.patch
  ./configure --with-charset=UTF-8 && make && make install

  cd /usr/local/src
  tar xvzf mecab-ruby-0.996.tar.gz && cd mecab-ruby-0.996
  ruby extconf.rb && make && make install

  echo "/usr/local/lib" >> /etc/ld.so.conf
  ldconfig

--------------------
# 読み上げ

  cd /usr/local/src
  wget http://downloads.sourceforge.net/hts-engine/hts_engine_API-1.08.tar.gz \
      http://downloads.sourceforge.net/open-jtalk/open_jtalk-1.07.tar.gz \
      http://downloads.sourceforge.net/lame/lame-3.99.5.tar.gz \
      http://downloads.sourceforge.net/sox/sox-14.4.1.tar.gz

  cd /usr/local/src
  tar xvzf hts_engine_API-1.08.tar.gz && cd hts_engine_API-1.08
  ./configure && make && make install

  cd /usr/local/src
  tar xvzf open_jtalk-1.07.tar.gz && cd open_jtalk-1.07
  sed -i "s/#define MAXBUFLEN 1024/#define MAXBUFLEN 10240/" bin/open_jtalk.c
  sed -i "s/0x00D0 SPACE/0x000D SPACE/" mecab-naist-jdic/char.def
  ./configure --with-charset=UTF-8 && make && make install

  cd /usr/local/src
  tar xvzf lame-3.99.5.tar.gz && cd lame-3.99.5
  ./configure && make && make install

  cd /usr/local/src
  tar xvzf sox-14.4.1.tar.gz && cd sox-14.4.1
  ./configure && make && make install

  ldconfig

# 読み上げの Basic 認証

  読み上げでは、リクエストされた URL にアクセスして記事をダウンロードします。
  アクセス先が Basic 認証で保護されている場合、ダウンロード出来ないため読み上げることができません。

  Basic 認証の設定が必要な場合、config/voice.yml をテキストエディタで開き、
  basic_auth をコメントアウトし、ユーザとパスワードを設定してください。

  ユーザとパスワードは、`secrets.yml` に設定している secret_key_base を用いて暗号化することができます。

  ```
  $ RAILS_ENV=production bundle exec rails c
  > secrets = Rails.application.secrets[:secret_key_base]
  > encryptor = ::ActiveSupport::MessageEncryptor.new(secrets, cipher: 'aes-256-cbc')
  > puts encryptor.encrypt_and_sign("user")
  > puts encryptor.encrypt_and_sign("pass")
  ```

  `secrets.yml` に設定している secret_key_base は production, test, development それぞれで異なるので、
  voice.yml にはそれぞれ異なる文字列を設定してください。

# 読み上げ使用時の Rack サーバの注意点

  読み上げをご利用になる場合、必ず Rack サーバが 2 多重以上でリクエストを処理できることを確認して下さい。
  Unicorn をご利用の場合 `config/unicorn.rb` を確認し、ワーカープロセス数を 2 以上に設定してください。

----------------------------------------------------------------------------------------------------

--------------------
# データベース操作

  cd /var/www/shirasagi

  # インデックスの作成
  rake db:create_indexes

  # 管理者ユーザーの作成
  rake ss:create_user data='{ name: "システム管理者", email: "sys@example.jp", password: "pass" }'

  # サイトの作成
  rake ss:create_site data='{ name: "サイト名", host: "www", domains: "localhost:3000" }'

--------------------
# サンプルデータ

  # ユーザー、グループデータの登録
  rake db:seed name=users site=www

  # サイトデータの登録
  rake db:seed name=demo site=www

--------------------
# CMS管理

  # 予約公開/非公開
  rake cms:release_pages

  # 静的ページ書き出し（フォルダ＋ページ）
  rake cms:generate_nodes site=www

  # 静的ページ書き出し（ページ）
  rake cms:generate_pages site=www

  # 静的ページ削除
  rake cms:remove_pages site=www

--------------------
# 定期実行設定(cron)

  # ページ公開＆書き出し
  */15 * * * * /bin/bash -l -c 'cd /var/www/shirasagi && bundle exec rake cms:release_pages && bundle exec rake cms:generate_nodes' >/dev/null

--------------------
# 開発ツール

  # Eggインストール
  bin/egg install sample-egg -v 1.0.0

  # Eggアンインストール
  bin/egg uninstall sample-egg

  # Egg作成
  bin/egg pack sample-egg -v 1.0.0

----------------------------------------------------------------------------------------------------
